"""
Temporal activity wrapper and workflow proxy for document repository.

This module contains:
1. The @temporal_activity_registration decorated class that wraps the pure backend
   MinioDocumentRepository as Temporal activities (for worker use only)
2. The @temporal_workflow_proxy decorated class that automatically generates
   workflow methods that delegate to activities

The activity names follow the pattern: julee.document_repo.minio.{method}
"""

from util.repos.temporal.decorators import temporal_activity_registration, temporal_workflow_proxy
from julee_example.repositories.minio.document import MinioDocumentRepository
from julee_example.repositories.document import DocumentRepository

# Activity name base used by both the temporal repository and workflow proxy
ACTIVITY_NAME_BASE = "julee.document_repo.minio"


@temporal_activity_registration(ACTIVITY_NAME_BASE)
class TemporalMinioDocumentRepository(MinioDocumentRepository):
    """Temporal activity wrapper for MinioDocumentRepository."""

    pass


@temporal_workflow_proxy(
    activity_base=ACTIVITY_NAME_BASE,
    default_timeout_seconds=30,
    retry_methods=["save", "generate_id"]
)
class WorkflowDocumentRepositoryProxy(DocumentRepository):
    """
    Workflow implementation of DocumentRepository that calls activities.
    All methods are automatically generated by the @temporal_workflow_proxy decorator.
    """

    pass
