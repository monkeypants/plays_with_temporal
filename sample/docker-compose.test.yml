services:
  worker:
    build:
      context: ..
      dockerfile: sample/Dockerfile.worker
    environment:
      - TEMPORAL_ENDPOINT=temporal:7233
      - MINIO_ENDPOINT=minio:9000
      - LOG_LEVEL=DEBUG
    depends_on:
      temporal:
        condition: service_started
      minio:
        condition: service_healthy
    restart: on-failure
    volumes:
      - ../sample:/app/sample

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
      POSTGRES_DB: temporal
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U temporal"]
      interval: 5s
      timeout: 5s
      retries: 5

  temporal:
    image: temporalio/auto-setup:1.27.2
    ports:
      - "7233:7233"
      - "8233:8233"
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgres
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  minio-data:
  postgres-data:
